# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="avit"
ZSH_THEME="af-magic"
ZSH_THEME="robbyrussell"
ZSH_THEME="candy"

# Set list of themes to load
# Setting this variable when ZSH_THEME=random
# cause zsh load theme from this variable instead of
# looking in ~/.oh-my-zsh/themes/
# An empty array have no effect
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(gitfast osx)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

for FILE in $(ls ~/.dotfiles/*/*.zsh); do
  source $FILE
done

# Microsoft.AppCenter.CoreServices
export CODE_DIR="$HOME/Code"
export APP_CENTER_CODE_DIR="$CODE_DIR/appcenter"
export APP_CENTER_DOCKER_COMPOSE_DIR="$APP_CENTER_CODE_DIR/dockercompose"
export CORE_SERVICeS_CODE_DIR="$APP_CENTER_CODE_DIR/core-services"

if [ -d $APP_CENTER_DOCKER_COMPOSE_DIR ]; then
  for filename in $APP_CENTER_DOCKER_COMPOSE_DIR/*.ps1
  do
    cmd=$(basename $filename .ps1)

    eval "a${cmd}() { $APP_CENTER_DOCKER_COMPOSE_DIR/${cmd}.ps1 diagnostics/docker \$*; }"
    eval "c${cmd}() { $APP_CENTER_DOCKER_COMPOSE_DIR/${cmd}.ps1 crashes-docker \$*; }"
    eval "cs${cmd}() { $APP_CENTER_DOCKER_COMPOSE_DIR/${cmd}.ps1 core-services/docker \$*; }"
    eval "d${cmd}() { $APP_CENTER_DOCKER_COMPOSE_DIR/${cmd}.ps1 distribution/docker \$*; }"
    eval "ui${cmd}() { $APP_CENTER_DOCKER_COMPOSE_DIR/${cmd}.ps1 ux/docker \$*; }"
  done
fi

function cssql() {
  docker run --rm -it mcr.microsoft.com/mssql-tools /opt/mssql-tools/bin/sqlcmd -U sa -P Your^StrongP3ssw0rd -S 172.17.0.1,8000 $*
}

function reload!() {
  source ~/.zshrc
}

autoload bashcompinit
bashcompinit
source ~/.bash_profile

export FLEXFLOW_CODE_PATH="$CODE_DIR/flexflow"
export FLEXFLOW_BIN_PATH="$FLEXFLOW_CODE_PATH/bin"
export PATH=$FLEXFLOW_BIN_PATH:$PATH
export PATH="$HOME/bin:$PATH"

function core() {
  BASE_BRANCH_NAME="jophenow/core-services"
  if [[ "$1" -eq "co" ]]; then
    git checkout "$BASE_BRANCH_NAME/$2"
    return
  elif [[ "$1" -eq "cob" ]]; then
    git checkout -b "$BASE_BRANCH_NAME/$2"
    return
  fi

  echo "Subcommand not found!"
  return 1
}

eval "$(rbenv init -)"

# Get qmake in PATH for capybara
# export PATH="$(brew --prefix qt@5.5)/bin:$PATH"
# export PATH="/usr/local/opt/mysql@5.6/bin:$PATH"
# export PATH="/usr/local/opt/mysql-client/bin:$PATH"
export PATH="$HOME/.cargo/bin:$PATH"

alias k='kubectl'
export EDITOR="code"
export VAGRANT_DISABLE_VBOXSYMLINKCREATE=1

# Docker
alias dp='docker ps'

## Cleanup
alias docker-clean-containers='docker rm $(docker ps -a -q)'
alias docker-clean-images='docker rmi $(docker images -q)'
alias docker-clean-volumes='docker volume rm $(docker volume ls -qf dangling=true)'
alias dcps='docker rm $(docker ps --filter=status=exited --filter=status=created -q)'
alias dcimg='docker rmi $(docker images -a --filter=dangling=true -q)'
alias docker-clean-all='docker-clean-containers; docker-clean-images; docker-clean-volumes'

# export GOPATH="$HOME/go"
# export GOPATH="$HOME/github/go"
# export PATH=$PATH:$GOPATH/bin

# source $HOME/Library/Preferences/org.dystroy.broot/launcher/bash/br
export PATH="/usr/local/opt/curl/bin:$PATH"

eval "$(direnv hook zsh)"
# eval "$(gh completion -s zsh)"

alias vim=nvim

# export TERM="screen-256color"
